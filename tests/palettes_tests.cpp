
#include <sge/video/image_pic.hpp>

#include "doctest/doctest.h"

#include <fstream>

TEST_CASE("load palette") {
    const sge::video::color expected_colors[] = {
        sge::video::color(0xFF, 0xFF, 0xFF, 0x00), sge::video::color(0x1C, 0x18, 0x1A, 0xFF),
        sge::video::color(0x4E, 0x12, 0x0E, 0xFF), sge::video::color(0x6D, 0x12, 0x0F, 0xFF),
        sge::video::color(0x4F, 0x2A, 0x16, 0xFF), sge::video::color(0x6E, 0x2C, 0x14, 0xFF),
        sge::video::color(0x4C, 0x17, 0x2A, 0xFF), sge::video::color(0x6E, 0x16, 0x29, 0xFF),
        sge::video::color(0x4C, 0x31, 0x2D, 0xFF), sge::video::color(0x6D, 0x32, 0x2C, 0xFF),
        sge::video::color(0xFF, 0xFF, 0xFF, 0x00), sge::video::color(0x5F, 0x52, 0x2D, 0xFF),
        sge::video::color(0x14, 0x0F, 0x4E, 0xFF), sge::video::color(0x29, 0x12, 0x4F, 0xFF),
        sge::video::color(0x14, 0x2E, 0x4D, 0xFF), sge::video::color(0x30, 0x32, 0x4A, 0xFF),
        sge::video::color(0x11, 0x0F, 0x6B, 0xFF), sge::video::color(0x2E, 0x12, 0x6C, 0xFF),
        sge::video::color(0x14, 0x2F, 0x6D, 0xFF), sge::video::color(0x2C, 0x30, 0x6E, 0xFF),
        sge::video::color(0x56, 0x2E, 0x56, 0xFF), sge::video::color(0x2A, 0x53, 0x5C, 0xFF),
        sge::video::color(0x4E, 0x4E, 0x4F, 0xFF), sge::video::color(0x6D, 0x52, 0x4C, 0xFF),
        sge::video::color(0xFF, 0xFF, 0xFF, 0x00), sge::video::color(0x70, 0x6B, 0x51, 0xFF),
        sge::video::color(0x4F, 0x52, 0x6C, 0xFF), sge::video::color(0x6B, 0x53, 0x6D, 0xFF),
        sge::video::color(0x52, 0x6A, 0x6F, 0xFF), sge::video::color(0x6E, 0x6E, 0x70, 0xFF),
        sge::video::color(0x9B, 0x24, 0x1C, 0xFF), sge::video::color(0xDA, 0x23, 0x1D, 0xFF),
        sge::video::color(0x9E, 0x58, 0x28, 0xFF), sge::video::color(0xE2, 0x60, 0x22, 0xFF),
        sge::video::color(0x9A, 0x2F, 0x54, 0xFF), sge::video::color(0xD9, 0x2A, 0x55, 0xFF),
        sge::video::color(0x9A, 0x66, 0x59, 0xFF), sge::video::color(0xDC, 0x68, 0x59, 0xFF),
        sge::video::color(0x28, 0x92, 0x26, 0xFF), sge::video::color(0x5F, 0x9A, 0x27, 0xFF),
        sge::video::color(0x2A, 0xD8, 0x23, 0xFF), sge::video::color(0x64, 0xD6, 0x22, 0xFF),
        sge::video::color(0x2A, 0x95, 0x5F, 0xFF), sge::video::color(0x65, 0x96, 0x61, 0xFF),
        sge::video::color(0x25, 0xD5, 0x64, 0xFF), sge::video::color(0x63, 0xD1, 0x62, 0xFF),
        sge::video::color(0xA2, 0x99, 0x2A, 0xFF), sge::video::color(0xEC, 0x9B, 0x26, 0xFF),
        sge::video::color(0xA2, 0xD7, 0x29, 0xFF), sge::video::color(0xF1, 0xD9, 0x27, 0xFF),
        sge::video::color(0x90, 0x8B, 0x52, 0xFF), sge::video::color(0xAF, 0x8C, 0x51, 0xFF),
        sge::video::color(0x8E, 0xAD, 0x50, 0xFF), sge::video::color(0xB0, 0xAC, 0x50, 0xFF),
        sge::video::color(0x90, 0x8C, 0x70, 0xFF), sge::video::color(0xAF, 0x8F, 0x6F, 0xFF),
        sge::video::color(0x90, 0xAE, 0x6F, 0xFF), sge::video::color(0xB1, 0xAA, 0x72, 0xFF),
        sge::video::color(0xCF, 0x8E, 0x50, 0xFF), sge::video::color(0xF3, 0x90, 0x4E, 0xFF),
        sge::video::color(0xD0, 0xAC, 0x50, 0xFF), sge::video::color(0xF6, 0xAF, 0x4F, 0xFF),
        sge::video::color(0xCE, 0x90, 0x6F, 0xFF), sge::video::color(0xF1, 0x92, 0x6E, 0xFF),
        sge::video::color(0xCF, 0xAD, 0x71, 0xFF), sge::video::color(0xF4, 0xB0, 0x6E, 0xFF),
        sge::video::color(0xA4, 0xD5, 0x5F, 0xFF), sge::video::color(0xD1, 0xCE, 0x50, 0xFF),
        sge::video::color(0xF9, 0xCE, 0x4F, 0xFF), sge::video::color(0xCE, 0xF1, 0x4F, 0xFF),
        sge::video::color(0xF9, 0xEC, 0x50, 0xFF), sge::video::color(0xD0, 0xCC, 0x71, 0xFF),
        sge::video::color(0xF8, 0xCD, 0x70, 0xFF), sge::video::color(0xD1, 0xF1, 0x6F, 0xFF),
        sge::video::color(0xF9, 0xED, 0x6F, 0xFF), sge::video::color(0x24, 0x28, 0x98, 0xFF),
        sge::video::color(0x59, 0x27, 0x99, 0xFF), sge::video::color(0x13, 0x4B, 0x90, 0xFF),
        sge::video::color(0x30, 0x4F, 0x8D, 0xFF), sge::video::color(0x11, 0x6F, 0x8E, 0xFF),
        sge::video::color(0x31, 0x6D, 0x8F, 0xFF), sge::video::color(0x14, 0x4C, 0xAD, 0xFF),
        sge::video::color(0x2D, 0x50, 0xAD, 0xFF), sge::video::color(0x13, 0x6E, 0xAD, 0xFF),
        sge::video::color(0x31, 0x6F, 0xAE, 0xFF), sge::video::color(0x4E, 0x51, 0x8D, 0xFF),
        sge::video::color(0x6C, 0x52, 0x8B, 0xFF), sge::video::color(0x52, 0x6F, 0x8C, 0xFF),
        sge::video::color(0x6E, 0x73, 0x8B, 0xFF), sge::video::color(0x4E, 0x51, 0xAC, 0xFF),
        sge::video::color(0x6B, 0x53, 0xAD, 0xFF), sge::video::color(0x4E, 0x71, 0xAD, 0xFF),
        sge::video::color(0x6E, 0x72, 0xAC, 0xFF), sge::video::color(0x22, 0x2E, 0xD9, 0xFF),
        sge::video::color(0x57, 0x31, 0xCC, 0xFF), sge::video::color(0x12, 0x51, 0xCA, 0xFF),
        sge::video::color(0x30, 0x51, 0xCB, 0xFF), sge::video::color(0x14, 0x6F, 0xCC, 0xFF),
        sge::video::color(0x32, 0x70, 0xCD, 0xFF), sge::video::color(0x10, 0x4E, 0xF4, 0xFF),
        sge::video::color(0x32, 0x4F, 0xEB, 0xFF), sge::video::color(0x10, 0x6F, 0xEA, 0xFF),
        sge::video::color(0x31, 0x71, 0xEA, 0xFF), sge::video::color(0x5C, 0x67, 0xD4, 0xFF),
        sge::video::color(0x98, 0x2E, 0x9F, 0xFF), sge::video::color(0xD9, 0x31, 0x9C, 0xFF),
        sge::video::color(0x99, 0x6A, 0x95, 0xFF), sge::video::color(0xE1, 0x69, 0x95, 0xFF),
        sge::video::color(0xA9, 0x2E, 0xD0, 0xFF), sge::video::color(0xCF, 0x39, 0xD7, 0xFF),
        sge::video::color(0x9F, 0x66, 0xD5, 0xFF), sge::video::color(0xD9, 0x66, 0xE2, 0xFF),
        sge::video::color(0x22, 0x94, 0xA2, 0xFF), sge::video::color(0x52, 0x8C, 0x90, 0xFF),
        sge::video::color(0x72, 0x8A, 0x90, 0xFF), sge::video::color(0x52, 0xA7, 0x8D, 0xFF),
        sge::video::color(0x71, 0xAD, 0x8F, 0xFF), sge::video::color(0x51, 0x8C, 0xB1, 0xFF),
        sge::video::color(0x71, 0x8F, 0xAD, 0xFF), sge::video::color(0x4F, 0xAB, 0xB1, 0xFF),
        sge::video::color(0x73, 0xAB, 0xB0, 0xFF), sge::video::color(0x30, 0xCE, 0xA4, 0xFF),
        sge::video::color(0x5E, 0xD8, 0x9D, 0xFF), sge::video::color(0x2B, 0x9A, 0xD3, 0xFF),
        sge::video::color(0x4E, 0x91, 0xCD, 0xFF), sge::video::color(0x6E, 0x93, 0xCA, 0xFF),
        sge::video::color(0x4F, 0xAB, 0xCD, 0xFF), sge::video::color(0x72, 0xAD, 0xCF, 0xFF),
        sge::video::color(0x51, 0x90, 0xEB, 0xFF), sge::video::color(0x70, 0x92, 0xEF, 0xFF),
        sge::video::color(0x50, 0xAD, 0xED, 0xFF), sge::video::color(0x71, 0xB0, 0xF2, 0xFF),
        sge::video::color(0x1D, 0xCD, 0xDB, 0xFF), sge::video::color(0x68, 0xD1, 0xE3, 0xFF),
        sge::video::color(0x8E, 0x8F, 0x90, 0xFF), sge::video::color(0xAC, 0x93, 0x8D, 0xFF),
        sge::video::color(0x92, 0xAB, 0x91, 0xFF), sge::video::color(0xB0, 0xAB, 0x91, 0xFF),
        sge::video::color(0x8D, 0x93, 0xAB, 0xFF), sge::video::color(0xAC, 0x94, 0xAD, 0xFF),
        sge::video::color(0x92, 0xAB, 0xB0, 0xFF), sge::video::color(0xAE, 0xB0, 0xAF, 0xFF),
        sge::video::color(0xCD, 0x92, 0x8D, 0xFF), sge::video::color(0xF1, 0x91, 0x8D, 0xFF),
        sge::video::color(0xFF, 0xFF, 0xFF, 0x00), sge::video::color(0xF3, 0xB1, 0x8E, 0xFF),
        sge::video::color(0xCD, 0x92, 0xAC, 0xFF), sge::video::color(0xF5, 0x91, 0xAC, 0xFF),
        sge::video::color(0xCC, 0xB3, 0xAD, 0xFF), sge::video::color(0xF2, 0xB2, 0xAD, 0xFF),
        sge::video::color(0xA9, 0xD1, 0xA4, 0xFF), sge::video::color(0xD1, 0xCA, 0x91, 0xFF),
        sge::video::color(0xF5, 0xCF, 0x90, 0xFF), sge::video::color(0xD2, 0xF0, 0x8F, 0xFF),
        sge::video::color(0xF9, 0xEF, 0x90, 0xFF), sge::video::color(0xD0, 0xCB, 0xB1, 0xFF),
        sge::video::color(0xF3, 0xD1, 0xAF, 0xFF), sge::video::color(0xD0, 0xED, 0xB1, 0xFF),
        sge::video::color(0xF9, 0xEF, 0xB0, 0xFF), sge::video::color(0x8D, 0x94, 0xCA, 0xFF),
        sge::video::color(0xAB, 0x94, 0xCD, 0xFF), sge::video::color(0x90, 0xB0, 0xCF, 0xFF),
        sge::video::color(0xAE, 0xB4, 0xCC, 0xFF), sge::video::color(0x8C, 0x94, 0xF1, 0xFF),
        sge::video::color(0xAB, 0x95, 0xEC, 0xFF), sge::video::color(0x8F, 0xB1, 0xF1, 0xFF),
        sge::video::color(0xAE, 0xB2, 0xEF, 0xFF), sge::video::color(0xCF, 0x91, 0xCB, 0xFF),
        sge::video::color(0xF1, 0x93, 0xCC, 0xFF), sge::video::color(0xCC, 0xB4, 0xCD, 0xFF),
        sge::video::color(0xF2, 0xB3, 0xCC, 0xFF), sge::video::color(0xD1, 0x90, 0xEC, 0xFF),
        sge::video::color(0xF1, 0x90, 0xF3, 0xFF), sge::video::color(0xCB, 0xB6, 0xED, 0xFF),
        sge::video::color(0xF4, 0xB1, 0xF1, 0xFF), sge::video::color(0x92, 0xCA, 0xD1, 0xFF),
        sge::video::color(0xB3, 0xCB, 0xD0, 0xFF), sge::video::color(0x92, 0xEB, 0xD1, 0xFF),
        sge::video::color(0xB2, 0xEB, 0xD0, 0xFF), sge::video::color(0x91, 0xCC, 0xEF, 0xFF),
        sge::video::color(0xB1, 0xD0, 0xED, 0xFF), sge::video::color(0x91, 0xEC, 0xF3, 0xFF),
        sge::video::color(0xB2, 0xED, 0xF5, 0xFF), sge::video::color(0xCF, 0xD1, 0xD1, 0xFF),
        sge::video::color(0xF0, 0xD3, 0xCE, 0xFF), sge::video::color(0xD2, 0xEA, 0xD2, 0xFF),
        sge::video::color(0xF7, 0xF0, 0xD0, 0xFF), sge::video::color(0xCD, 0xD4, 0xED, 0xFF),
        sge::video::color(0xF1, 0xD4, 0xEF, 0xFF), sge::video::color(0xD2, 0xEA, 0xF2, 0xFF),
        sge::video::color(0xFF, 0xFF, 0xFF, 0x00), sge::video::color(0xFF, 0xFF, 0xFF, 0xFF),
        sge::video::color(0xFF, 0xFF, 0xFF, 0x00), sge::video::color(0xFF, 0xFF, 0xFF, 0x00),
        sge::video::color(0xFF, 0xFF, 0xFF, 0x00), sge::video::color(0xFF, 0xFF, 0xFF, 0x00),
        sge::video::color(0xFF, 0xFF, 0xFF, 0x00), sge::video::color(0xFF, 0xFF, 0xFF, 0x00),
        sge::video::color(0xFF, 0xFF, 0xFF, 0x00), sge::video::color(0xFF, 0xFF, 0xFF, 0x00),
        sge::video::color(0xFF, 0xFF, 0xFF, 0x00), sge::video::color(0x2F, 0x2F, 0x2F, 0xFF),
        sge::video::color(0xFF, 0xFF, 0xFF, 0x00), sge::video::color(0xCD, 0xA7, 0x98, 0xFF),
        sge::video::color(0xFF, 0xFF, 0xFF, 0x00), sge::video::color(0xFF, 0xFF, 0xFF, 0x00),
        sge::video::color(0xA4, 0x73, 0x51, 0xFF), sge::video::color(0x90, 0x63, 0x3D, 0xFF),
        sge::video::color(0x7B, 0x52, 0x28, 0xFF), sge::video::color(0x68, 0x42, 0x0F, 0xFF),
        sge::video::color(0xFF, 0xFF, 0xFF, 0x00), sge::video::color(0xFF, 0xFF, 0xFF, 0x00),
        sge::video::color(0xF1, 0xBA, 0x0C, 0xFF), sge::video::color(0xCA, 0x95, 0x0F, 0xFF),
        sge::video::color(0xFF, 0xFF, 0xFF, 0x00), sge::video::color(0xFF, 0xFF, 0xFF, 0x00),
        sge::video::color(0xFF, 0x94, 0x11, 0xFF), sge::video::color(0xDD, 0x7E, 0x0E, 0xFF),
        sge::video::color(0xBB, 0x68, 0x0B, 0xFF), sge::video::color(0x9A, 0x53, 0x09, 0xFF),
        sge::video::color(0xFF, 0xFF, 0xFF, 0x00), sge::video::color(0xFF, 0xFF, 0xFF, 0x00),
        sge::video::color(0x07, 0xD4, 0xAA, 0xFF), sge::video::color(0x08, 0xB9, 0x96, 0xFF),
        sge::video::color(0x09, 0x9E, 0x82, 0xFF), sge::video::color(0x0B, 0x84, 0x6F, 0xFF),
        sge::video::color(0x0C, 0x69, 0x5B, 0xFF), sge::video::color(0xEB, 0x77, 0x6F, 0xFF),
        sge::video::color(0xBC, 0x55, 0x4F, 0xFF), sge::video::color(0xA5, 0x44, 0x3F, 0xFF),
        sge::video::color(0x8E, 0x32, 0x2E, 0xFF), sge::video::color(0xFF, 0xFF, 0xFF, 0x00),
        sge::video::color(0x69, 0x81, 0x55, 0xFF), sge::video::color(0x53, 0x72, 0x47, 0xFF),
        sge::video::color(0x3C, 0x63, 0x38, 0xFF), sge::video::color(0x21, 0x44, 0x24, 0xFF),
        sge::video::color(0xFF, 0xFF, 0xFF, 0x00), sge::video::color(0xFF, 0xFF, 0xFF, 0x00),
        sge::video::color(0xFF, 0xFF, 0xFF, 0x00), sge::video::color(0xFF, 0xFF, 0xFF, 0x00),
        sge::video::color(0xFF, 0xFF, 0xFF, 0x00), sge::video::color(0xFF, 0xFF, 0xFF, 0x00),
        sge::video::color(0xFF, 0xFF, 0xFF, 0x00), sge::video::color(0xFF, 0xFF, 0xFF, 0x00),
        sge::video::color(0xFF, 0xFF, 0xFF, 0x00), sge::video::color(0xFF, 0xFF, 0xFF, 0x00),
        sge::video::color(0xFF, 0xFF, 0xFF, 0x00), sge::video::color(0xFF, 0xFF, 0xFF, 0x00),
        sge::video::color(0xFF, 0xFF, 0xFF, 0x00), sge::video::color(0xFF, 0xFF, 0xFF, 0x00),
        sge::video::color(0xFF, 0xFF, 0xFF, 0x00), sge::video::color(0xFF, 0xFF, 0xFF, 0x00),
        sge::video::color(0xFF, 0xFF, 0xFF, 0x00), sge::video::color(0xFF, 0xFF, 0xFF, 0x00),
        sge::video::color(0xFF, 0xFF, 0xFF, 0x00), sge::video::color(0x00, 0x00, 0x00, 0xFF)};

    const std::string path(TEST_DATA_DIR "/duelpal.tr");

    std::fstream palette_file(path, std::ios::in);
    CHECK(palette_file.is_open());

    const auto colors = sge::video::parse_palette_tr(palette_file);
    CHECK(colors.has_value());

    for (std::size_t idx = 0; idx < 256; ++idx) {
        CHECK_EQ(expected_colors[idx], colors.value()[idx]);
    }
}

TEST_CASE("load palette without index") {
    const sge::video::color expected_colors[] = {
        sge::video::color(0x1C, 0x18, 0x1A, 0xFF), sge::video::color(0x4E, 0x12, 0x0E, 0xFF),
        sge::video::color(0x6D, 0x12, 0x0F, 0xFF), sge::video::color(0x4F, 0x2A, 0x16, 0xFF),
        sge::video::color(0x6E, 0x2C, 0x14, 0xFF), sge::video::color(0x4C, 0x17, 0x2A, 0xFF),
        sge::video::color(0x6E, 0x16, 0x29, 0xFF), sge::video::color(0x4C, 0x31, 0x2D, 0xFF),
        sge::video::color(0x6D, 0x32, 0x2C, 0xFF), sge::video::color(0x25, 0x54, 0x29, 0xFF),
        sge::video::color(0x5F, 0x52, 0x2D, 0xFF), sge::video::color(0x14, 0x0F, 0x4E, 0xFF),
        sge::video::color(0x29, 0x12, 0x4F, 0xFF), sge::video::color(0x14, 0x2E, 0x4D, 0xFF),
        sge::video::color(0x30, 0x32, 0x4A, 0xFF), sge::video::color(0x11, 0x0F, 0x6B, 0xFF),
        sge::video::color(0x2E, 0x12, 0x6C, 0xFF), sge::video::color(0x14, 0x2F, 0x6D, 0xFF),
        sge::video::color(0x2C, 0x30, 0x6E, 0xFF), sge::video::color(0x56, 0x2E, 0x56, 0xFF),
        sge::video::color(0x2A, 0x53, 0x5C, 0xFF), sge::video::color(0x4E, 0x4E, 0x4F, 0xFF),
        sge::video::color(0x6D, 0x52, 0x4C, 0xFF), sge::video::color(0x53, 0x69, 0x52, 0xFF),
        sge::video::color(0x70, 0x6B, 0x51, 0xFF), sge::video::color(0x4F, 0x52, 0x6C, 0xFF),
        sge::video::color(0x6B, 0x53, 0x6D, 0xFF), sge::video::color(0x52, 0x6A, 0x6F, 0xFF),
        sge::video::color(0x6E, 0x6E, 0x70, 0xFF), sge::video::color(0x9B, 0x24, 0x1C, 0xFF),
        sge::video::color(0xDA, 0x23, 0x1D, 0xFF), sge::video::color(0x9E, 0x58, 0x28, 0xFF),
        sge::video::color(0xE2, 0x60, 0x22, 0xFF), sge::video::color(0x9A, 0x2F, 0x54, 0xFF),
        sge::video::color(0xD9, 0x2A, 0x55, 0xFF), sge::video::color(0x9A, 0x66, 0x59, 0xFF),
        sge::video::color(0xDC, 0x68, 0x59, 0xFF), sge::video::color(0x28, 0x92, 0x26, 0xFF),
        sge::video::color(0x5F, 0x9A, 0x27, 0xFF), sge::video::color(0x2A, 0xD8, 0x23, 0xFF),
        sge::video::color(0x64, 0xD6, 0x22, 0xFF), sge::video::color(0x2A, 0x95, 0x5F, 0xFF),
        sge::video::color(0x65, 0x96, 0x61, 0xFF), sge::video::color(0x25, 0xD5, 0x64, 0xFF),
        sge::video::color(0x63, 0xD1, 0x62, 0xFF), sge::video::color(0xA2, 0x99, 0x2A, 0xFF),
        sge::video::color(0xEC, 0x9B, 0x26, 0xFF), sge::video::color(0xA2, 0xD7, 0x29, 0xFF),
        sge::video::color(0xF1, 0xD9, 0x27, 0xFF), sge::video::color(0x90, 0x8B, 0x52, 0xFF),
        sge::video::color(0xAF, 0x8C, 0x51, 0xFF), sge::video::color(0x8E, 0xAD, 0x50, 0xFF),
        sge::video::color(0xB0, 0xAC, 0x50, 0xFF), sge::video::color(0x90, 0x8C, 0x70, 0xFF),
        sge::video::color(0xAF, 0x8F, 0x6F, 0xFF), sge::video::color(0x90, 0xAE, 0x6F, 0xFF),
        sge::video::color(0xB1, 0xAA, 0x72, 0xFF), sge::video::color(0xCF, 0x8E, 0x50, 0xFF),
        sge::video::color(0xF3, 0x90, 0x4E, 0xFF), sge::video::color(0xD0, 0xAC, 0x50, 0xFF),
        sge::video::color(0xF6, 0xAF, 0x4F, 0xFF), sge::video::color(0xCE, 0x90, 0x6F, 0xFF),
        sge::video::color(0xF1, 0x92, 0x6E, 0xFF), sge::video::color(0xCF, 0xAD, 0x71, 0xFF),
        sge::video::color(0xF4, 0xB0, 0x6E, 0xFF), sge::video::color(0xA4, 0xD5, 0x5F, 0xFF),
        sge::video::color(0xD1, 0xCE, 0x50, 0xFF), sge::video::color(0xF9, 0xCE, 0x4F, 0xFF),
        sge::video::color(0xCE, 0xF1, 0x4F, 0xFF), sge::video::color(0xF9, 0xEC, 0x50, 0xFF),
        sge::video::color(0xD0, 0xCC, 0x71, 0xFF), sge::video::color(0xF8, 0xCD, 0x70, 0xFF),
        sge::video::color(0xD1, 0xF1, 0x6F, 0xFF), sge::video::color(0xF9, 0xED, 0x6F, 0xFF),
        sge::video::color(0x24, 0x28, 0x98, 0xFF), sge::video::color(0x59, 0x27, 0x99, 0xFF),
        sge::video::color(0x13, 0x4B, 0x90, 0xFF), sge::video::color(0x30, 0x4F, 0x8D, 0xFF),
        sge::video::color(0x11, 0x6F, 0x8E, 0xFF), sge::video::color(0x31, 0x6D, 0x8F, 0xFF),
        sge::video::color(0x14, 0x4C, 0xAD, 0xFF), sge::video::color(0x2D, 0x50, 0xAD, 0xFF),
        sge::video::color(0x13, 0x6E, 0xAD, 0xFF), sge::video::color(0x31, 0x6F, 0xAE, 0xFF),
        sge::video::color(0x4E, 0x51, 0x8D, 0xFF), sge::video::color(0x6C, 0x52, 0x8B, 0xFF),
        sge::video::color(0x52, 0x6F, 0x8C, 0xFF), sge::video::color(0x6E, 0x73, 0x8B, 0xFF),
        sge::video::color(0x4E, 0x51, 0xAC, 0xFF), sge::video::color(0x6B, 0x53, 0xAD, 0xFF),
        sge::video::color(0x4E, 0x71, 0xAD, 0xFF), sge::video::color(0x6E, 0x72, 0xAC, 0xFF),
        sge::video::color(0x22, 0x2E, 0xD9, 0xFF), sge::video::color(0x57, 0x31, 0xCC, 0xFF),
        sge::video::color(0x12, 0x51, 0xCA, 0xFF), sge::video::color(0x30, 0x51, 0xCB, 0xFF),
        sge::video::color(0x14, 0x6F, 0xCC, 0xFF), sge::video::color(0x32, 0x70, 0xCD, 0xFF),
        sge::video::color(0x10, 0x4E, 0xF4, 0xFF), sge::video::color(0x32, 0x4F, 0xEB, 0xFF),
        sge::video::color(0x10, 0x6F, 0xEA, 0xFF), sge::video::color(0x31, 0x71, 0xEA, 0xFF),
        sge::video::color(0x5C, 0x67, 0xD4, 0xFF), sge::video::color(0x98, 0x2E, 0x9F, 0xFF),
        sge::video::color(0xD9, 0x31, 0x9C, 0xFF), sge::video::color(0x99, 0x6A, 0x95, 0xFF),
        sge::video::color(0xE1, 0x69, 0x95, 0xFF), sge::video::color(0xA9, 0x2E, 0xD0, 0xFF),
        sge::video::color(0xCF, 0x39, 0xD7, 0xFF), sge::video::color(0x9F, 0x66, 0xD5, 0xFF),
        sge::video::color(0xD9, 0x66, 0xE2, 0xFF), sge::video::color(0x22, 0x94, 0xA2, 0xFF),
        sge::video::color(0x52, 0x8C, 0x90, 0xFF), sge::video::color(0x72, 0x8A, 0x90, 0xFF),
        sge::video::color(0x52, 0xA7, 0x8D, 0xFF), sge::video::color(0x71, 0xAD, 0x8F, 0xFF),
        sge::video::color(0x51, 0x8C, 0xB1, 0xFF), sge::video::color(0x71, 0x8F, 0xAD, 0xFF),
        sge::video::color(0x4F, 0xAB, 0xB1, 0xFF), sge::video::color(0x73, 0xAB, 0xB0, 0xFF),
        sge::video::color(0x30, 0xCE, 0xA4, 0xFF), sge::video::color(0x5E, 0xD8, 0x9D, 0xFF),
        sge::video::color(0x2B, 0x9A, 0xD3, 0xFF), sge::video::color(0x4E, 0x91, 0xCD, 0xFF),
        sge::video::color(0x6E, 0x93, 0xCA, 0xFF), sge::video::color(0x4F, 0xAB, 0xCD, 0xFF),
        sge::video::color(0x72, 0xAD, 0xCF, 0xFF), sge::video::color(0x51, 0x90, 0xEB, 0xFF),
        sge::video::color(0x70, 0x92, 0xEF, 0xFF), sge::video::color(0x50, 0xAD, 0xED, 0xFF),
        sge::video::color(0x71, 0xB0, 0xF2, 0xFF), sge::video::color(0x1D, 0xCD, 0xDB, 0xFF),
        sge::video::color(0x68, 0xD1, 0xE3, 0xFF), sge::video::color(0x8E, 0x8F, 0x90, 0xFF),
        sge::video::color(0xAC, 0x93, 0x8D, 0xFF), sge::video::color(0x92, 0xAB, 0x91, 0xFF),
        sge::video::color(0xB0, 0xAB, 0x91, 0xFF), sge::video::color(0x8D, 0x93, 0xAB, 0xFF),
        sge::video::color(0xAC, 0x94, 0xAD, 0xFF), sge::video::color(0x92, 0xAB, 0xB0, 0xFF),
        sge::video::color(0xAE, 0xB0, 0xAF, 0xFF), sge::video::color(0xCD, 0x92, 0x8D, 0xFF),
        sge::video::color(0xF1, 0x91, 0x8D, 0xFF), sge::video::color(0xCD, 0xB0, 0x8F, 0xFF),
        sge::video::color(0xF3, 0xB1, 0x8E, 0xFF), sge::video::color(0xCD, 0x92, 0xAC, 0xFF),
        sge::video::color(0xF5, 0x91, 0xAC, 0xFF), sge::video::color(0xCC, 0xB3, 0xAD, 0xFF),
        sge::video::color(0xF2, 0xB2, 0xAD, 0xFF), sge::video::color(0xA9, 0xD1, 0xA4, 0xFF),
        sge::video::color(0xD1, 0xCA, 0x91, 0xFF), sge::video::color(0xF5, 0xCF, 0x90, 0xFF),
        sge::video::color(0xD2, 0xF0, 0x8F, 0xFF), sge::video::color(0xF9, 0xEF, 0x90, 0xFF),
        sge::video::color(0xD0, 0xCB, 0xB1, 0xFF), sge::video::color(0xF3, 0xD1, 0xAF, 0xFF),
        sge::video::color(0xD0, 0xED, 0xB1, 0xFF), sge::video::color(0xF9, 0xEF, 0xB0, 0xFF),
        sge::video::color(0x8D, 0x94, 0xCA, 0xFF), sge::video::color(0xAB, 0x94, 0xCD, 0xFF),
        sge::video::color(0x90, 0xB0, 0xCF, 0xFF), sge::video::color(0xAE, 0xB4, 0xCC, 0xFF),
        sge::video::color(0x8C, 0x94, 0xF1, 0xFF), sge::video::color(0xAB, 0x95, 0xEC, 0xFF),
        sge::video::color(0x8F, 0xB1, 0xF1, 0xFF), sge::video::color(0xAE, 0xB2, 0xEF, 0xFF),
        sge::video::color(0xCF, 0x91, 0xCB, 0xFF), sge::video::color(0xF1, 0x93, 0xCC, 0xFF),
        sge::video::color(0xCC, 0xB4, 0xCD, 0xFF), sge::video::color(0xF2, 0xB3, 0xCC, 0xFF),
        sge::video::color(0xD1, 0x90, 0xEC, 0xFF), sge::video::color(0xF1, 0x90, 0xF3, 0xFF),
        sge::video::color(0xCB, 0xB6, 0xED, 0xFF), sge::video::color(0xF4, 0xB1, 0xF1, 0xFF),
        sge::video::color(0x92, 0xCA, 0xD1, 0xFF), sge::video::color(0xB3, 0xCB, 0xD0, 0xFF),
        sge::video::color(0x92, 0xEB, 0xD1, 0xFF), sge::video::color(0xB2, 0xEB, 0xD0, 0xFF),
        sge::video::color(0x91, 0xCC, 0xEF, 0xFF), sge::video::color(0xB1, 0xD0, 0xED, 0xFF),
        sge::video::color(0x91, 0xEC, 0xF3, 0xFF), sge::video::color(0xB2, 0xED, 0xF5, 0xFF),
        sge::video::color(0xCF, 0xD1, 0xD1, 0xFF), sge::video::color(0xF0, 0xD3, 0xCE, 0xFF),
        sge::video::color(0xD2, 0xEA, 0xD2, 0xFF), sge::video::color(0xF7, 0xF0, 0xD0, 0xFF),
        sge::video::color(0xCD, 0xD4, 0xED, 0xFF), sge::video::color(0xF1, 0xD4, 0xEF, 0xFF),
        sge::video::color(0xD2, 0xEA, 0xF2, 0xFF), sge::video::color(0xF7, 0xF7, 0xF6, 0xFF),
        sge::video::color(0xFF, 0xFF, 0xFF, 0x00), sge::video::color(0xFF, 0xFF, 0xFF, 0x00),
        sge::video::color(0xFF, 0xFF, 0xFF, 0x00), sge::video::color(0xFF, 0xFF, 0xFF, 0x00),
        sge::video::color(0xFF, 0xFF, 0xFF, 0x00), sge::video::color(0xFF, 0xFF, 0xFF, 0x00),
        sge::video::color(0xFF, 0xFF, 0xFF, 0x00), sge::video::color(0xFF, 0xFF, 0xFF, 0x00),
        sge::video::color(0xFF, 0xFF, 0xFF, 0x00), sge::video::color(0xFF, 0xFF, 0xFF, 0x00),
        sge::video::color(0xFF, 0xFF, 0xFF, 0x00), sge::video::color(0xFF, 0xFF, 0xFF, 0x00),
        sge::video::color(0xFF, 0xFF, 0xFF, 0x00), sge::video::color(0xFF, 0xFF, 0xFF, 0x00),
        sge::video::color(0xFF, 0xFF, 0xFF, 0x00), sge::video::color(0xFF, 0xFF, 0xFF, 0x00),
        sge::video::color(0xFF, 0xFF, 0xFF, 0x00), sge::video::color(0xFF, 0xFF, 0xFF, 0x00),
        sge::video::color(0xFF, 0xFF, 0xFF, 0x00), sge::video::color(0xFF, 0xFF, 0xFF, 0x00),
        sge::video::color(0xFF, 0xFF, 0xFF, 0x00), sge::video::color(0xFF, 0xFF, 0xFF, 0x00),
        sge::video::color(0xFF, 0xFF, 0xFF, 0x00), sge::video::color(0xFF, 0xFF, 0xFF, 0x00),
        sge::video::color(0xFF, 0xFF, 0xFF, 0x00), sge::video::color(0xFF, 0xFF, 0xFF, 0x00),
        sge::video::color(0xFF, 0xFF, 0xFF, 0x00), sge::video::color(0xFF, 0xFF, 0xFF, 0x00),
        sge::video::color(0xFF, 0xFF, 0xFF, 0x00), sge::video::color(0xFF, 0xFF, 0xFF, 0x00),
        sge::video::color(0xFF, 0xFF, 0xFF, 0x00), sge::video::color(0xFF, 0xFF, 0xFF, 0x00),
        sge::video::color(0xFF, 0xFF, 0xFF, 0x00), sge::video::color(0xFF, 0xFF, 0xFF, 0x00),
        sge::video::color(0xFF, 0xFF, 0xFF, 0x00), sge::video::color(0xFF, 0xFF, 0xFF, 0x00),
        sge::video::color(0xFF, 0xFF, 0xFF, 0x00), sge::video::color(0xFF, 0xFF, 0xFF, 0x00),
        sge::video::color(0xFF, 0xFF, 0xFF, 0x00), sge::video::color(0xFF, 0xFF, 0xFF, 0x00),
        sge::video::color(0xFF, 0xFF, 0xFF, 0x00), sge::video::color(0xFF, 0xFF, 0xFF, 0x00),
        sge::video::color(0xFF, 0xFF, 0xFF, 0x00), sge::video::color(0xFF, 0xFF, 0xFF, 0x00),
        sge::video::color(0xFF, 0xFF, 0xFF, 0x00), sge::video::color(0xFF, 0xFF, 0xFF, 0x00),
        sge::video::color(0xFF, 0xFF, 0xFF, 0x00), sge::video::color(0xFF, 0xFF, 0xFF, 0x00),
        sge::video::color(0xFF, 0xFF, 0xFF, 0x00), sge::video::color(0xFF, 0xFF, 0xFF, 0x00),
        sge::video::color(0xFF, 0xFF, 0xFF, 0x00), sge::video::color(0xFF, 0xFF, 0xFF, 0x00),
        sge::video::color(0xFF, 0xFF, 0xFF, 0x00), sge::video::color(0xFF, 0xFF, 0xFF, 0x00),
        sge::video::color(0xFF, 0xFF, 0xFF, 0x00), sge::video::color(0xFF, 0xFF, 0xFF, 0x00),
        sge::video::color(0xFF, 0xFF, 0xFF, 0x00), sge::video::color(0xFF, 0xFF, 0xFF, 0x00),
        sge::video::color(0xFF, 0xFF, 0xFF, 0x00), sge::video::color(0xFF, 0xFF, 0xFF, 0x00),
        sge::video::color(0xFF, 0xFF, 0xFF, 0x00), sge::video::color(0xFF, 0xFF, 0xFF, 0x00),
        sge::video::color(0xFF, 0xFF, 0xFF, 0x00), sge::video::color(0xFF, 0xFF, 0xFF, 0x00),
        sge::video::color(0xFF, 0xFF, 0xFF, 0x00), sge::video::color(0xFF, 0xFF, 0xFF, 0x00)};

    const std::string path(TEST_DATA_DIR "/palall9.tr");

    std::fstream palette_file(path, std::ios::in);
    CHECK(palette_file.is_open());

    const auto colors = sge::video::parse_palette_tr(palette_file);

    CHECK(colors.has_value());

    for (std::size_t idx = 0; idx < 256; ++idx) {
        CHECK_EQ(expected_colors[idx], colors.value()[idx]);
    }
}
